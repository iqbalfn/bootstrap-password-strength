{"version":3,"sources":["../../src/js/util.js","../../src/js/password-strength.js"],"names":["TRANSITION_END","transitionEndEmulator","duration","_this","this","called","$","one","Util","setTimeout","triggerTransitionEnd","getUID","prefix","Math","random","document","getElementById","getSelectorFromElement","element","selector","getAttribute","hrefAttr","trim","querySelector","err","getTransitionDurationFromElement","transitionDuration","css","transitionDelay","floatTransitionDuration","parseFloat","floatTransitionDelay","split","reflow","offsetHeight","trigger","supportsTransitionEnd","Boolean","isElement","obj","nodeType","typeCheckConfig","componentName","config","configTypes","property","Object","prototype","hasOwnProperty","call","expectedTypes","value","valueType","toString","match","toLowerCase","RegExp","test","Error","toUpperCase","findShadowRoot","documentElement","attachShadow","getRootNode","ShadowRoot","parentNode","root","fn","emulateTransitionEnd","event","special","bindType","delegateType","handle","target","is","handleObj","handler","apply","arguments","NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","Default","progress","tester","cb","pass","input","score","letters","i","length","variations","digits","lower","upper","nonWords","variationCount","check","parseInt","DefaultType","Event","INPUT_DATA_API","CHANGE_DATA_API","UPDATE_DATA_API","PasswordStrength","_config","_getConfig","_element","_progress","_progress_bar","_tester","_value","children","get","window","_addElementListener","dispose","off","removeData","on","e","_calculateStrength","_this2","res","_updateProgress","cls","setAttribute","style","width","_objectSpread","_jQueryInterface","relatedTarget","each","data","Constructor","noConflict"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.3.1): util.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Private TransitionEnd Helpers\n * ------------------------------------------------------------------------\n */\n\nconst TRANSITION_END = 'transitionend'\nconst MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\nfunction toType(obj) {\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\nfunction getSpecialTransitionEndEvent() {\n  return {\n    bindType: TRANSITION_END,\n    delegateType: TRANSITION_END,\n    handle(event) {\n      if ($(event.target).is(this)) {\n        return event.handleObj.handler.apply(this, arguments) // eslint-disable-line prefer-rest-params\n      }\n      return undefined // eslint-disable-line no-undefined\n    }\n  }\n}\n\nfunction transitionEndEmulator(duration) {\n  let called = false\n\n  $(this).one(Util.TRANSITION_END, () => {\n    called = true\n  })\n\n  setTimeout(() => {\n    if (!called) {\n      Util.triggerTransitionEnd(this)\n    }\n  }, duration)\n\n  return this\n}\n\nfunction setTransitionEndSupport() {\n  $.fn.emulateTransitionEnd = transitionEndEmulator\n  $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent()\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst Util = {\n\n  TRANSITION_END: 'bsTransitionEnd',\n\n  getUID(prefix) {\n    do {\n      // eslint-disable-next-line no-bitwise\n      prefix += ~~(Math.random() * MAX_UID) // \"~~\" acts like a faster Math.floor() here\n    } while (document.getElementById(prefix))\n    return prefix\n  },\n\n  getSelectorFromElement(element) {\n    let selector = element.getAttribute('data-target')\n\n    if (!selector || selector === '#') {\n      const hrefAttr = element.getAttribute('href')\n      selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : ''\n    }\n\n    try {\n      return document.querySelector(selector) ? selector : null\n    } catch (err) {\n      return null\n    }\n  },\n\n  getTransitionDurationFromElement(element) {\n    if (!element) {\n      return 0\n    }\n\n    // Get transition-duration of the element\n    let transitionDuration = $(element).css('transition-duration')\n    let transitionDelay = $(element).css('transition-delay')\n\n    const floatTransitionDuration = parseFloat(transitionDuration)\n    const floatTransitionDelay = parseFloat(transitionDelay)\n\n    // Return 0 if element or transition duration is not found\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0\n    }\n\n    // If multiple durations are defined, take the first\n    transitionDuration = transitionDuration.split(',')[0]\n    transitionDelay = transitionDelay.split(',')[0]\n\n    return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n  },\n\n  reflow(element) {\n    return element.offsetHeight\n  },\n\n  triggerTransitionEnd(element) {\n    $(element).trigger(TRANSITION_END)\n  },\n\n  // TODO: Remove in v5\n  supportsTransitionEnd() {\n    return Boolean(TRANSITION_END)\n  },\n\n  isElement(obj) {\n    return (obj[0] || obj).nodeType\n  },\n\n  typeCheckConfig(componentName, config, configTypes) {\n    for (const property in configTypes) {\n      if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n        const expectedTypes = configTypes[property]\n        const value         = config[property]\n        const valueType     = value && Util.isElement(value)\n          ? 'element' : toType(value)\n\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          throw new Error(\n            `${componentName.toUpperCase()}: ` +\n            `Option \"${property}\" provided type \"${valueType}\" ` +\n            `but expected type \"${expectedTypes}\".`)\n        }\n      }\n    }\n  },\n\n  findShadowRoot(element) {\n    if (!document.documentElement.attachShadow) {\n      return null\n    }\n\n    // Can find the shadow root otherwise it'll return the document\n    if (typeof element.getRootNode === 'function') {\n      const root = element.getRootNode()\n      return root instanceof ShadowRoot ? root : null\n    }\n\n    if (element instanceof ShadowRoot) {\n      return element\n    }\n\n    // when we don't find a shadow root\n    if (!element.parentNode) {\n      return null\n    }\n\n    return Util.findShadowRoot(element.parentNode)\n  }\n}\n\nsetTransitionEndSupport()\n\nexport default Util\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap Password Strength (v0.0.1): password-strength.js\n * Licensed under MIT (https://github.com/iqbalfn/bootstrap-password-strength/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME               = 'pwdstr'\nconst VERSION            = '0.0.1'\nconst DATA_KEY           = 'bs.pwdstr'\nconst EVENT_KEY          = `.${DATA_KEY}`\nconst DATA_API_KEY       = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst Default = {\n    progress    : null,\n    tester      : function(cb, pass, input){\n        let score = 0\n        if(!pass)\n            return cb(score)\n\n        // award every unique letter until 5 repetitions\n        let letters = new Object()\n        for (let i=0; i<pass.length; i++){\n            letters[pass[i]] = (letters[pass[i]] || 0) + 1\n            score+= 5.0 / letters[pass[i]]\n        }\n\n        // bonus points for mixing it up\n        let variations = {\n            digits   : /\\d/.test(pass),\n            lower    : /[a-z]/.test(pass),\n            upper    : /[A-Z]/.test(pass),\n            nonWords : /\\W/.test(pass)\n        }\n\n        let variationCount = 0;\n        for (var check in variations)\n            variationCount+= (variations[check] == true) ? 1 : 0\n\n        score+= (variationCount - 1) * 10\n\n        cb(parseInt(score))\n    }\n}\n\nconst DefaultType = {\n    progress    : '(string|element)',\n    tester      : '(string|function)'\n}\n\nconst Event = {\n    INPUT_DATA_API      : `input${EVENT_KEY}${DATA_API_KEY}`,\n    CHANGE_DATA_API     : `change${EVENT_KEY}${DATA_API_KEY}`,\n    UPDATE_DATA_API     : `update${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {}\n\nconst Selector = {}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass PasswordStrength {\n    constructor(element, config) {\n        this._config                = this._getConfig(config)\n        this._element               = element\n        this._progress              = this._config.progress\n        this._progress_bar          = null\n        this._tester                = this._config.tester\n        this._value                 = 0\n\n        if(typeof this._progress === 'string')\n            this._progress = document.querySelector(this._progress)\n\n        if(this._progress)\n            this._progress_bar = $(this._progress).children('.progress-bar').get(0)\n\n        if(typeof this._tester === 'string')\n            this._tester = window[this._tester]\n\n        this._addElementListener()\n    }\n\n    // Getters\n\n    static get VERSION() {\n        return VERSION\n    }\n\n    static get Default() {\n        return Default\n    }\n\n    // Public\n\n    dispose() {\n        $(this._element).off(EVENT_KEY)\n        $.removeData(this._element, DATA_KEY)\n\n        this._config                = null\n        this._element               = null\n        this._progress              = null\n        this._progress_bar          = null\n        this._tester                = null\n        this._value                 = 0\n    }\n\n    // Private\n\n    _addElementListener(){\n        $(this._element).on(Event.INPUT_DATA_API, e => {\n            this._calculateStrength(e)\n        })\n        $(this._element).on(Event.CHANGE_DATA_API, e => {\n            this._calculateStrength(e)\n        })\n    }\n\n    _calculateStrength(event){\n        this._tester(res => {\n            this._updateProgress(res)\n        }, this._element.value, this._element)\n    }\n\n    _updateProgress(value){\n        if(!this._progress_bar || this._value == value)\n            return\n\n        this._value = value\n\n\n        if(value > 100)\n            value = 100\n\n        let cls = 'progress-bar'\n        if(value < 25)\n            cls+= ' bg-danger'\n        else if(value < 50)\n            cls+= ' bg-warning'\n        else if(value < 75)\n            cls+= ' bg-info'\n        else\n            cls+= ' bg-success'\n\n        this._progress_bar.setAttribute('aria-valuenow', value)\n        this._progress_bar.setAttribute('class', cls)\n        this._progress_bar.style.width = value + '%'\n\n        $(this._element).trigger(Event.CHANGE_DATA_API, value)\n    }\n\n    _getConfig(config) {\n        config = {\n            ...Default,\n            ...config\n        }\n        Util.typeCheckConfig(NAME, config, DefaultType)\n        return config\n    }\n\n    // Static\n\n    static _jQueryInterface(config, relatedTarget) {\n        return this.each(function () {\n            let data = $(this).data(DATA_KEY)\n            const _config = {\n                ...Default,\n                ...$(this).data(),\n                ...typeof config === 'object' && config ? config : {}\n            }\n\n            if (!data) {\n                data = new PasswordStrength(this, _config)\n                $(this).data(DATA_KEY, data)\n            }\n        })\n    }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = PasswordStrength._jQueryInterface\n$.fn[NAME].Constructor = PasswordStrength\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return PasswordStrength._jQueryInterface\n}\n\nexport default PasswordStrength"]}